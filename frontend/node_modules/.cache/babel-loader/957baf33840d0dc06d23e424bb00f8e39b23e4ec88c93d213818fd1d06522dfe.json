{"ast":null,"code":"var _jsxFileName = \"D:\\\\job-board-platform\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Hero from \"./components/Hero\";\nimport JobList from \"./components/JobList\";\nimport JobForm from \"./components/JobForm\";\nimport Footer from \"./components/Footer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [refresh, setRefresh] = useState(false);\n  const toggleRefresh = () => setRefresh(!refresh);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(JobList, {}, refresh, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/post-job\",\n        element: /*#__PURE__*/_jsxDEV(JobForm, {\n          onJobPosted: toggleRefresh\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6+/yT37Nx+gEjvkQsqOCPSG4734=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","BrowserRouter","Router","Routes","Route","Header","Hero","JobList","JobForm","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","refresh","setRefresh","toggleRefresh","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onJobPosted","_c","$RefreshReg$"],"sources":["D:/job-board-platform/frontend/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Hero from \"./components/Hero\";\nimport JobList from \"./components/JobList\";\nimport JobForm from \"./components/JobForm\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const [refresh, setRefresh] = useState(false);\n  const toggleRefresh = () => setRefresh(!refresh);\n\n  return (\n    <Router>\n      <Header />\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <>\n              <Hero />\n              <JobList key={refresh} />\n            </>\n          }\n        />\n        <Route\n          path=\"/post-job\"\n          element={<JobForm onJobPosted={toggleRefresh} />}\n        />\n      </Routes>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMkB,aAAa,GAAGA,CAAA,KAAMD,UAAU,CAAC,CAACD,OAAO,CAAC;EAEhD,oBACEL,OAAA,CAACT,MAAM;IAAAiB,QAAA,gBACLR,OAAA,CAACN,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVZ,OAAA,CAACR,MAAM;MAAAgB,QAAA,gBACLR,OAAA,CAACP,KAAK;QACJoB,IAAI,EAAC,GAAG;QACRC,OAAO,eACLd,OAAA,CAAAE,SAAA;UAAAM,QAAA,gBACER,OAAA,CAACL,IAAI;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACRZ,OAAA,CAACJ,OAAO,MAAMS,OAAO;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,eACzB;MACH;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACFZ,OAAA,CAACP,KAAK;QACJoB,IAAI,EAAC,WAAW;QAChBC,OAAO,eAAEd,OAAA,CAACH,OAAO;UAACkB,WAAW,EAAER;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACTZ,OAAA,CAACF,MAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEb;AAACR,EAAA,CAzBQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}